<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kej.app.board.mapper.BoardMapper">
	<!-- board all list -->
	<!-- 페이징+목록개수+게시글타입+검색기능 -->
	<!-- reference : https://badstorage.tistory.com/13 -->
	<select id="dressBoradList" resultType="BoardVO">
		SELECT *
			FROM (
				SELECT b.board_no
				     , code
				     , category
				     , b.id
				     , title
				     , b.content
				     , b.write_dt
				     , view_count
				     , ( SELECT COUNT(*) AS cnt
					       FROM REPLY c
					      WHERE 1=1
					        AND b.board_no = c.board_no
					     	AND c.yn = 1
					      GROUP BY c.board_no) AS "reply_count" 
				  FROM board b
				  LEFT OUTER JOIN ( SELECT board_no, GROUP_CONCAT(content ORDER BY content SEPARATOR ',') AS reply_content
				                      FROM reply
				                     WHERE yn = 1
				                     GROUP BY board_no
				                   ) r
				    ON b.board_no = r.board_no
				 <if test="searchType == '' or searchType == null">
				 WHERE category LIKE CONCAT('%',#{category},'%')
				 </if>
			     <if test="searchType == 'boTitCon'">
			     WHERE (category LIKE CONCAT('%',#{category},'%') AND (title LIKE CONCAT('%',#{searchName},'%') OR content LIKE CONCAT ('%',#{searchName},'%')))
			     </if>
			     <if test="searchType == 'boardTitle'">
			     WHERE (category LIKE CONCAT('%',#{category},'%') AND title LIKE CONCAT('%',#{searchName},'%'))
			     </if>
			     <if test="searchType == 'boardContent'">
			     WHERE (category LIKE CONCAT('%',#{category},'%') AND b.id LIKE CONCAT ('%',#{searchName},'%'))
			     </if>
			     <if test="searchType == 'replyContent'">
			     WHERE (category LIKE CONCAT('%',#{category},'%') AND reply_content LIKE CONCAT ('%',#{searchName},'%'))
			     </if>
				   AND code = #{code}
				   AND yn = 1
				 ORDER BY 1 DESC
			 ) a
  		LIMIT #{pageStart}, #{amount}
	</select>
	
	<!-- board all list count -->
	<select id="pagecount" resultType="int">
		 SELECT COUNT(*)
		  FROM board b
		  LEFT JOIN ( SELECT board_no
  						   , GROUP_CONCAT(content ORDER BY content SEPARATOR ',') AS "reply_content" 
                        FROM reply
                       WHERE yn = 1
                       GROUP BY board_no
		             ) r
		    ON b.board_no = r.board_no
		 <if test="searchType == '' or searchType == null">
		 WHERE category LIKE CONCAT('%',#{category},'%')
		 </if>
	     <if test="searchType == 'boTitCon'">
	     WHERE (category LIKE CONCAT('%',#{category},'%') AND (title LIKE CONCAT('%',#{searchName},'%') OR content LIKE CONCAT ('%',#{searchName},'%')))
	     </if>
	     <if test="searchType == 'boardTitle'">
	     WHERE (category LIKE CONCAT('%',#{category},'%') AND title LIKE CONCAT('%',#{searchName},'%'))
	     </if>
	     <if test="searchType == 'boardContent'">
	     WHERE (category LIKE CONCAT('%',#{category},'%') AND b.id LIKE CONCAT ('%',#{searchName},'%'))
	     </if>
	     <if test="searchType == 'replyContent'">
	     WHERE (category LIKE CONCAT('%',#{category},'%') AND reply_content LIKE CONCAT ('%',#{searchName},'%'))
	     </if>
		   AND code = #{code}
		   AND yn = 1
	</select>
	

	<!--  board insert -->
	<insert id="boardInsert" parameterType="BoardVO">
		<selectKey keyProperty="boardNo" resultType="java.lang.Integer" order="BEFORE">
			SELECT nextval('BOARD_SEQ')
		</selectKey>
		INSERT INTO BOARD
			(board_no, code, category, id, title, content, write_dt, view_count, yn)
		VALUES
			(#{boardNo, jdbcType=INTEGER, javaType=Integer}, #{code}, #{category}, #{id}, #{title}, #{content}, now(), 0, 1)
	</insert>

	<!-- board detail -->
	<select id="boardDressDetail" resultType="BoardVO">
		SELECT b.board_no
			 , id
			 , content
			 , code
			 , category
			 , title
			 , write_dt
			 , view_count
			 , COALESCE(( SELECT COUNT(*) AS cnt
					        FROM REPLY c
					       WHERE 1=1
					         AND b.board_no = c.board_no
					         AND c.yn = 1
					       GROUP BY c.board_no),0) AS "reply_count"
		     , COALESCE(( SELECT COUNT(*) AS like_cnt
					        FROM board_like l
					       WHERE 1=1
					         AND b.board_no = l.board_no),0) AS "like_count"
		  FROM board b
		 WHERE 1=1
		   AND b.board_no = #{boardNo}
	</select>
	
	<!-- board view count -->
	<update id="dressBoardViewCount" parameterType="int">
		UPDATE board
		   SET view_count = (view_count + 1)
		 WHERE board_no = #{boardNo}
	</update>
	 <!-- 다음글 > -->
	 <select id="selectBoardsAfter" resultType="BoardVO">
		 SELECT b.board_no
		      , b.id
		      , title
		      , b.write_dt
		      , view_count
		      , COALESCE((SELECT COUNT(*) AS cnt
					        FROM REPLY c
					       WHERE 1=1
					         AND b.board_no = c.board_no
					       	 AND c.yn = 1
					       GROUP BY c.board_no), 0) AS "reply_count" 
		  FROM board b
		 WHERE b.board_no &gt; #{boardNo}
		   AND code = 10
		   AND category = #{category}
		   AND yn = 1
		 ORDER BY 1 ASC
		 LIMIT 4
	 </select>
	 <!-- 현재글 -->
	 <select id="selectBoardAt" resultType="BoardVO">
		SELECT b.board_no
		     , b.id
		     , title
		     , b.write_dt
		     , view_count
		     , COALESCE((SELECT COUNT(*) AS cnt
					       FROM REPLY c
					      WHERE 1=1
					        AND b.board_no = c.board_no
					     	AND c.yn = 1
					      GROUP BY c.board_no), 0) AS "reply_count" 
		  FROM board b
		 WHERE b.board_no = #{boardNo}
		   AND code = 10
		   AND category = #{category}
		   AND yn = 1
	 </select>
	 <!-- 이전글 < -->
	 <select id="selectBoardsBefore" resultType="BoardVO">
		SELECT b.board_no
		     , b.id
		     , title
		     , b.write_dt
		     , view_count
		     , COALESCE((SELECT COUNT(*) AS cnt
					       FROM REPLY c
					      WHERE 1=1
					        AND b.board_no = c.board_no
					     	AND c.yn = 1
					      GROUP BY c.board_no), 0) AS "reply_count" 
		  FROM board b
		 WHERE b.board_no &lt; #{boardNo}
		   AND code = 10
		   AND category = #{category}
		   AND yn = 1
		 ORDER BY 1 DESC
		 LIMIT 4
	  </select>
	  
	  <!-- 게시글 수정 -->
	  <update id="dressBoardUpdate" parameterType="BoardVO">
		UPDATE board
		   SET code = #{code}
		  	 , category = #{category}
			 , title = #{title}
			 , content = #{content}
			 , yn = #{yn}
		 WHERE board_no = #{boardNo}
		   AND id = #{id}
	  </update>
	
	  <update id="dressBoardDelete" parameterType="BoardVO">
	  	UPDATE board
	       SET yn = #{yn}
	     WHERE board_no = #{boardNo}
	       AND id = #{id}
	  </update>
	  
	  <!-- 메인페이지 최근 게시글 리스트 -->
	  <select id="newBoardListWithin3Days" resultType="BoardVO">
	  	SELECT BOARD_NO
		     , CODE
		     , CATEGORY
		     , ID
		     , TITLE
		     , CONTENT
		     , WRITE_DT
		     , VIEW_COUNT
		     , YN
		     , COALESCE((SELECT COUNT(*)
		          FROM REPLY r
		         WHERE b.board_no = r.board_no
		           AND yn = 1
		       ), 0) AS "reply_count"
		     , COALESCE((SELECT COUNT(*)
		     			   FROM board_like l
		     			  WHERE b.board_no = l.board_no)
		 	   , 0) AS "like_count"
		  FROM board b
		 WHERE yn = 1
		   AND code LIKE CONCAT('%',#{code},'%')
		   AND category LIKE CONCAT('%',#{category},'%')
		   AND b.write_dt BETWEEN DATE_ADD(NOW(), INTERVAL -3 DAY) AND NOW()
		 ORDER BY WRITE_DT DESC
		 LIMIT #{pageStart}, #{amount}
	  </select>
	  
	  <!-- 메인페이지 최근 게시글 페이지네이션 -->
	  <select id="newBoardCountWithin3Days" resultType="int">
		  SELECT COUNT(*)
		    FROM board b
		   WHERE yn = 1
		     AND code LIKE CONCAT('%',#{code},'%')
		     AND category LIKE CONCAT('%',#{category},'%')
		     AND b.write_dt BETWEEN DATE_ADD(NOW(), INTERVAL -3 DAY) AND NOW()
	  </select>
	  
	  <!-- 메인페이지 인기 게시글 -->
	  <select id="likeTopList" resultType="BoardVO">
	  	SELECT b.board_no
		     , code
		     , category
		     , b.id
		     , title
		     , content
		     , write_dt
		     , view_count
		     , yn
		     , (SELECT COUNT(*)
		          FROM reply r
		         WHERE b.board_no = r.board_no) AS "reply_count"
		     , COALESCE(like_count, 0) AS "like_count"
		  FROM board b LEFT JOIN (SELECT board_no, COUNT(*) AS "like_count"
						     	    FROM board_like
						     	   GROUP BY board_no) l
		    ON b.board_no = l.board_no
		 WHERE code LIKE CONCAT('%',#{code},'%')
		   AND category LIKE CONCAT('%',#{category},'%')
		   AND like_count IS NOT NULL
		 ORDER BY like_count DESC
		 LIMIT #{pageStart}, #{amount}
	  </select>
	
	  <!-- 메인 페이지 인기 게시글 total -->
	  <select id="likeTopCount" resultType="int">
	  	SELECT COUNT(*)
		  FROM board b LEFT JOIN (SELECT board_no, COUNT(*) AS "like_count"
						     	    FROM board_like
						     	   GROUP BY board_no) l
		    ON b.board_no = l.board_no
		 WHERE code LIKE CONCAT('%',#{code},'%')
		   AND category LIKE CONCAT('%',#{category},'%')
		   AND like_count IS NOT NULL
		 ORDER BY like_count DESC
	  </select>
	  <!-- 메인, 이미지 있는 게시글  -->
	  <select id="postsWithImages" resultType="BoardVO">
	   SELECT b.board_no
		      , code
		      , category
		      , id
		      , title
		      , content
		      , write_dt
		      , view_count
		      , yn
		      , (SELECT COUNT(*)
		           FROM reply r
		          WHERE b.board_no = r.board_no) AS "reply_count"
		      , (SELECT COUNT(*)
		           FROM board_like l
		          WHERE b.board_no = l.board_no) AS "like_count"
		   FROM board b
		  WHERE 1=1
		    AND content LIKE CONCAT('%figure class="image"%')
		    AND yn = 1
		  ORDER BY write_dt DESC
		  LIMIT #{pageStart}, #{amount}
	  </select>
	  <select id="postsWithImagesCount" resultType="int">
	  	 SELECT COUNT(*)
		   FROM board b
		  WHERE 1=1
		    AND content LIKE CONCAT('%figure class="image"%')
		    AND yn = 1
	  </select>


	<!-- eunae end -->

	<!-- 전체조회 -->
	<select id="artBoardList" resultType="BoardVO"> 
		SELECT BOARD_NO
			 , ID
			 , TITLE
			 , CONTENT 
			 , WRITE_DT
			 , VIEW_COUNT
			 ,(SELECT COUNT(REPLY_NO)
			 	  FROM REPLY R
			 	 WHERE 1=1
			 	   AND R.YN = 1
			 	   AND B.BOARD_NO = R.BOARD_NO) REPLY_COUNT
		FROM  BOARD B 
		WHERE 1=1
		  AND YN = 1
		  AND CODE = #{code}
		  <if test="category != '' and category != null and category != 0">
		  AND CATEGORY = #{category}
		  </if>
	    LIMIT #{pageStart}, #{amount}
	</select>
	
	<!-- 페이징을 하기 위해서 총 게시글의 개수 -->
	<select id="artPagecount" resultType="BoardVO">
		 SELECT COUNT(BOARD_NO)
		   FROM BOARD
		  WHERE 1=1
		  	AND CODE = #{code}
		  	<if test="category != '' and category != null and category != 0">
		  	AND CATEGORY = #{category}
		  	</if>
		  	AND YN = 1
	</select>

	<!-- 상세조회 -->
	<select id="boardArtDetail" resultType="map">
		SELECT B.TITLE
			 , B.ID AS BOARD_ID
			 , B.WRITE_DT AS BOARD_WRITE_DT
			 , B.VIEW_COUNT
			 , B.CONTENT AS BOARD_CONTENT
			 , COUNT(L.ID) AS LIKE_COUNT
		  FROM BOARD B
	 LEFT JOIN BOARD_LIKE L
		    ON B.BOARD_NO = L.BOARD_NO
		 WHERE 1=1
		   AND B.BOARD_NO = ${boardNo}
		 GROUP BY B.TITLE
			 , B.ID
			 , B.WRITE_DT
			 , B.VIEW_COUNT
			 , B.CONTENT
	</select>


















































</mapper>